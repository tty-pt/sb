#!/bin/sh

chords_path="$DOCUMENT_ROOT/items/chords/items/"
choirs_path="$DOCUMENT_ROOT/items/choir/items/"
choir="`cat choir`"
choir_path="$choirs_path/$choir"
choir_title="`cat $choir_path/title`"
choir="`echo $choir_title | translate`"

rand() {
	if test -f $choir_path/songs.db; then
		$qdb -a $chords_path/index.db:s -a $choir_path/songs.db:s -R"$1" $chords_path/assoc.db:s
	else
		$qdb -a $chords_path/index.db:s -R"$1" $chords_path/assoc.db:s
	fi
}

if test $REQUEST_METHOD = POST; then
	im $OWNER $choir || Forbidden

	count="`wc -l data.txt`"
	cn=0
	cp data.txt backup.txt
	cat data.txt | if test "$HTTP_PARAM_action" = "transpose"; then
		while IFS=: read song ct fmt; do
			test $cn -ne $HTTP_PARAM_n ||
				ct=$HTTP_PARAM_t
			echo $song:$ct:$fmt
			cn=`math $cn + 1`
		done
	else
		while IFS=: read song ct fmt; do
			test $cn -ne $HTTP_PARAM_n ||
				song="`rand "$fmt"`"
			echo "$song:$ct:$fmt"
			cn=`math $cn + 1`
		done
	fi > data.txt

	SeeOther "/sb/$iid/?c=$HTTP_PARAM_c&l=$HTTP_PARAM_l"
fi

index() {
	local counter=0
	while IFS=: read link t fmt; do
		echo -g$link
	done | xargs -I {} $qdb -kr {} $chords_path/index.db:s \
		| while read link flags title; do
		path="$chords_path/$link/data.txt"
		echo "<div><a href='#$counter'>$title</a></div>"
		counter="`math $counter + 1`"
	done
}

. $chords_path/../lib
echo "$buttons" >> $fun

TForm() {
	cat <<!
<form action='.#$1' method='POST' class='h8 f fic'>
<input name='n' type='hidden' value='$1'></input>
`hidparams t`
`key_select $3/data.txt $2`
<input name='action' type='hidden' value='transpose'></input>
<noscript><button class="$RBS">üéöÔ∏è</button></noscript>
</form>
!
}

RForm() {
	cat <<!
<form action='.#$1' method='POST' class='h f fic'>
`hidparams t`
<input name='n' type='hidden' value='$1'></input>
<input name='action' type='hidden' value='randomize'></input>
<button class="$RBS">üé≤</button>
</form>
!
}

if im $OWNER $choir && test -z "$nc"; then
	shift_chords() {
		echo "<span>`RForm $1`</span>"
		echo "<span>`TForm $1 $2 $3`</span>"
	}
fi

show() {
	counter=0
	while IFS=: read song t fmt; do
		test ! -z "$song" || continue
		chords_print $song $t $fmt
		counter="`math $counter + 1`"
	done
}

echo "<pre lang='pt' class='v f chords'>"
cat data.txt | show
echo "</pre>"
