#!/bin/sh

flags=""
test -z "$HTTP_PARAM_b" || flags="$flags -b"
test -z "$HTTP_PARAM_l" || flags="$flags -l"
if test ! -z "$HTTP_PARAM_s"; then
	nc=1
	flags="$flags -C"
fi

chords_path="$DOCUMENT_ROOT/items/chords/items/"
choirs_path="$DOCUMENT_ROOT/items/choir/items/"
choir="`cat $ITEM_PATH/choir`"
choir_path="$choirs_path/$choir"

rand() {
	qhash -q $chords_path/types.db -a $choir_path/songs.db -rR"$1" $chords_path/assoc.db
}

if test $REQUEST_METHOD = POST && im $OWNER; then
	count="`wc -l $ITEM_PATH/data.txt`"
	cn=0
	cp $ITEM_PATH/data.txt $ITEM_PATH/backup.txt
	cat $ITEM_PATH/data.txt | if test "$HTTP_PARAM_action" = "transpose"; then
		while IFS=: read song ct fmt; do
			test $cn -ne $HTTP_PARAM_n ||
				ct=$HTTP_PARAM_t
			echo $song:$ct:$fmt
			cn=`math $cn + 1`
		done
	else
		while IFS=: read song ct fmt; do
			test $cn -ne $HTTP_PARAM_n ||
				song="`rand "$fmt" | cut -d' ' -f2-`"
			echo "$song:$ct:$fmt"
			cn=`math $cn + 1`
		done
	fi > $ITEM_PATH/data.txt

	SeeOther "/sb/$iid/?s=$HTTP_PARAM_s&l=$HTTP_PARAM_l"
fi

index() {
	local counter=0
	while IFS=: read song t fmt; do
		format="`qhash -g$counter $ITEM_PATH/format.db | cut -d' ' -f2-`"
		path="$chords_path/`echo $song | awk '{print $1}'`/data.txt"
		echo "<div><a href='#$counter'>`echo "$song" | cut -d' ' -f2-`</a></div>"
		counter="`math $counter + 1`"
	done
}

TypeBtn() {
	if test ! -z "$HTTP_PARAM_s"; then
		RB "üé∏" "?"
	else
		RB "üëÑ" "?s=1"
		test -z "$HTTP_PARAM_l" \
			&& RB "üèõÔ∏è" "?l=1" \
			|| RB "üî†" "?"
	fi
}

cat >> $DOCUMENT_ROOT/tmp/fun <<!
<label id="index" class="$RBS menu extended">
	‚â°
	<input type="checkbox" />
	<div class="abs v ar8 p c0 ts btn ttc">`cat $ITEM_PATH/data.txt | index`</div>
</label>
`TypeBtn`
!

TForm() {
	cat <<!
<label id="tune" class="$RBS menu">üéöÔ∏è
<input type="checkbox" /><div class="abs v p ts ttc c01 r center">
<form action='.#$1' method='POST' class='h f fic'>
<input name='t' type='number' step='1' value='$2'></input>
<input name='n' type='hidden' value='$1'></input>
<input name='l' type='hidden' value='$HTTP_PARAM_l'></input>
<input name='s' type='hidden' value='$HTTP_PARAM_s'></input>
<input name='action' type='hidden' value='transpose'></input>
<button class="$RBS">‚úî</button>
</form></div></label>
!
}

RForm() {
	cat <<!
<form action='.#$1' method='POST' class='h f fic'>
<input name='n' type='hidden' value='$1'></input>
<input name='l' type='hidden' value='$HTTP_PARAM_l'></input>
<input name='s' type='hidden' value='$HTTP_PARAM_s'></input>
<input name='action' type='hidden' value='randomize'></input>
<button class="$RBS">üé≤</button>
</form>
!
}

if im $OWNER && test -z "$nc"; then
	shift_chords() {
		# add ‚ü≥
		echo "<span>`TForm $1 $2`</span>"
		echo "<span>`RForm $1`</span>"
	}
else
	shift_chords() {
	}
fi

show() {
	counter=0
	while IFS=: read song t fmt; do
		echo $song >&2
		test ! -z "$song" || continue
		format="`test ! -z "$fmt" && echo $fmt || qhash -rg$counter $ITEM_PATH/format.db | cut -d ' ' -f1-`"
		link="`echo $song | awk '{print $1}'`"
		song_dir="$chords_path/$link"
		path="$song_dir/data.txt"
		lypath="$song_dir/data.ly"
		test -f "$lypath" &&
			lyink="<a href='/chords/$link/data.ly'>ùÑû</a> " ||
			lyink=

		test -f "$song_dir/type" \
			&& type="<h6>$format</h6>" \
			|| type=""

		cat - <<!
<span id='$counter' class='h f fic mt32'>
<div class="v0 f fg">

<h4>$lyink<a href='/chords/$link/'>`echo $song | cut -d' ' -f3-`</a></h4>
$type
</div>
`shift_chords $counter $t`
</span>
!
		cat "$path" | tail -n +3 | transp -h $flags -t $t
		counter="`math $counter + 1`"
	done
}

echo "<a href='/choir/$choir'><h3>`cat $choir_path/title`</h3></a>"
echo "<pre lang='pt' class='v0 chords'>"
cat $ITEM_PATH/data.txt | show
echo "</pre>"
